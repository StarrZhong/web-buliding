@charset 'UTF-8';

// import Common Setting
@import 'config';
@import 'mixin';

*{
	box-sizing: border-box;
}

.container{
	@include container;
}
.container-fluid{
	width: 100%;
	padding-left: $gutter;
	padding-right: $gutter;
	margin: 0 auto;
	width: 100%;
}
.floatBox,.flexBox{
	margin-left: $gutter*-1;
	margin-right: $gutter*-1;
}
	
.floatBox{
	@include floatBox;
	@include inBoxColumn;
	
}

.flexBox{
	@include flexBox(left,top);
	@include inBoxColumn;
}


[class*=col-]{
	@include column;
}
@each $detect, $value in $detectDeviceSetting{
	@media screen and (min-width: map-get($value,detectWidth) ){
		.hidden-#{$detect}-up{
			display: none;
		}
	}
	@media screen and (max-width: map-get($value,detectWidth)-1 ){
		.hidden-#{$detect}-down{
			display: none;
		}
	}
}
$wideRange: min-width;
@each $detect, $value in $detectDeviceSetting{
	@if $detect == xs or $detect == xxs {
		$wideRange: max-width;
	}
	@media screen and ($wideRange: map-get($value,detectWidth)) {
		@for $i from 1 through $column{
			.col-#{$detect}-#{$i}{
				width: $i / $column * 100 + %;
			}
			.col-#{$detect}-push-#{$i}{
				left: $i / $column * 100 + %;
			}
			.col-#{$detect}-pull-#{$i}{
				left: $i / $column * -100 + %;
			}
			.col-#{$detect}-offset-#{$i}{
				margin-left: $i / $column * 100 + %;
			}
		}
	}
}